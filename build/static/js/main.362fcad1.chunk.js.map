{"version":3,"sources":["helpers.js","components/StorePicker.js","components/Header.js","components/Order.js","components/AddFishForm.js","components/EditFishForm.js","components/Login.js","base.js","components/Inventory.js","sample-fishes.js","components/Fish.js","components/App.js","components/NotFound.js","components/Router.js","index.js"],"names":["formatPrice","cents","toLocaleString","style","currency","rando","arr","Math","floor","random","length","getFunName","adjectives","concat","StorePicker","myInput","React","createRef","goToStore","event","preventDefault","storeName","_this","current","value","props","history","push","react_default","a","createElement","className","onSubmit","this","type","required","placeholder","defaultValue","ref","Component","Header","tagline","Order","renderOrder","key","fish","fishes","count","order","isAvailable","status","react_transition_group","classNames","timeout","enter","leave","s","name","price","onClick","removeFromOrder","_this2","orderIds","Object","keys","total","reduce","prevTotal","component","map","AddFishForm","nameRef","priceRef","statusRef","descRef","imageRef","createFish","console","log","parseFloat","desc","image","addFish","currentTarget","reset","EditFishForm","handleChange","updateFish","objectSpread","defineProperty","index","onChange","deleteFish","Login","authenticate","firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Inventory","state","uid","owner","authHandler","_callee","authData","store","regenerator_default","wrap","_context","prev","next","fetch","storeId","context","assertThisInitialized","sent","post","data","user","setState","stop","provider","authProvider","auth","signInWithPopup","then","logout","_callee2","_context2","signOut","onAuthStateChanged","_this3","components_EditFishForm","components_AddFishForm","loadSampleFishes","components_Login","fish1","fish2","fish3","fish4","fish5","fish6","fish7","fish8","fish9","Fish","handleClick","addToOrder","_this$props$details","details","src","alt","disabled","App","Date","now","updatedFish","sampleFishes","params","match","localStorageRef","localStorage","getItem","JSON","parse","syncState","removeBinding","setItem","stringify","components_Header","components_Fish","components_Order","components_Inventory","NotFound","Router","BrowserRouter","Switch","Route","exact","path","render","components_Router","document","querySelector"],"mappings":"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","file":"static/js/main.362fcad1.chunk.js","sourcesContent":["export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { getFunName } from './../helpers';\n\nclass StorePicker extends React.Component {\n    myInput = React.createRef()\n\n    static propTypes = {\n        history: PropTypes.object\n    }\n\n    goToStore = event => {\n        event.preventDefault();\n        const storeName = this.myInput.current.value;\n\n        this.props.history.push(`/store/${storeName}`);\n    };\n\n    render() {\n        return (\n            <form className=\"store-selector\" onSubmit={this.goToStore}>\n                <h2>Select a store</h2>\n                <input type=\"text\" required placeholder=\"Store name\" defaultValue={getFunName()} ref={this.myInput}/>\n                <button type=\"submit\">Visit Store -></button>\n            </form>\n        )\n    }\n}\n\nexport default StorePicker;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Header extends React.Component {\n    render() {\n        return (\n            <header className=\"top\">\n                <h1>\n                    Catch \n                    <span className=\"ofThe\">\n                        <span className=\"of\">of</span>\n                        <span className=\"the\">the</span>\n                    </span>\n                    Week\n                </h1>\n                <h3 className=\"tagline\">\n                    <span>{this.props.tagline}</span>\n                </h3>\n            </header>\n        )\n    }\n}\n\nHeader.propTypes = {\n    tagline: PropTypes.string.isRequired\n};\n\nexport default Header;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nclass Order extends React.Component {\n    static propTypes = {\n      fishes: PropTypes.object,\n      order: PropTypes.object,\n      removeFromOrder: PropTypes.func\n    }\n\n    renderOrder = (key) => {\n        const fish = this.props.fishes[key];\n        const count = this.props.order[key];\n        const isAvailable = fish && fish.status === 'available';\n\n        if (!fish || !count) {\n            return null;\n        }\n\n        if (!isAvailable) {\n            return <li key={key}>Sorry {fish ? fish.name : 'fish' } is no longer available</li>;\n        }\n\n        return (\n            <CSSTransition classNames=\"order\" key={key} timeout={{enter: 250, leave: 250 }} s>\n              <li key={key}>\n                  {count} lbs {fish.name}\n                   &nbsp; {formatPrice(count * fish.price)}\n                   <button onClick={ () => this.props.removeFromOrder(key) }>&times;</button>\n              </li>\n            </CSSTransition>\n        );\n    };\n\n    render() {\n        const orderIds = Object.keys(this.props.order);\n        const total = orderIds.reduce((prevTotal, key) => {\n            const fish = this.props.fishes[key];\n            const count = this.props.order[key];\n            const isAvailable = fish && fish.status === 'available';\n\n            if (isAvailable) {\n                return prevTotal + (count * fish.price);\n            }\n\n            return prevTotal;\n        }, 0);\n\n        return (\n            <div className=\"order-wrap\">\n               <h2>Order</h2>\n               <TransitionGroup component=\"ul\" className=\"order\">\n                   {orderIds.map(this.renderOrder)}\n               </TransitionGroup>\n               <div className=\"total\">\n                   Total: \n                   <strong>{formatPrice(total)}</strong>\n               </div>\n            </div>\n        )\n    }\n}\n\nexport default Order;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass AddFishForm extends React.Component {\n    nameRef = React.createRef();\n    priceRef = React.createRef();\n    statusRef = React.createRef();\n    descRef = React.createRef();\n    imageRef = React.createRef();\n\n    static propTypes = {\n        addFish: PropTypes.func\n    }\n\n    createFish = (event) => {\n        event.preventDefault();\n        console.log(this.nameRef.current.value);\n\n        const fish = {\n            name: this.nameRef.current.value,\n            price: parseFloat(this.priceRef.current.value),\n            status: this.statusRef.current.value,\n            desc: this.descRef.current.value,\n            image: this.imageRef.current.value\n        };\n\n        this.props.addFish(fish);\n        event.currentTarget.reset();\n    }\n\n    render() {\n        return (\n            <form className=\"fish-edit\" onSubmit={this.createFish}>\n                <input name=\"name\" ref={this.nameRef} type=\"text\" placeholder=\"Name\" />\n                <input name=\"price\" ref={this.priceRef} type=\"text\" placeholder=\"Price\" />\n                \n                <select name=\"status\" ref={this.statusRef} >\n                    <option value=\"available\">Fresh</option>\n                    <option value=\"unavailable\">Sold out</option>\n                </select>\n\n                <textarea name=\"desc\" ref={this.descRef} placeholder=\"Description\" />\n                <input name=\"image\" ref={this.imageRef} type=\"text\" placeholder=\"Image\" />\n                <button type=\"submit\">+ Add fish</button>\n            </form>\n        )\n    }\n}\n\nexport default AddFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass EditFishForm extends React.Component {\n\tstatic propTypes = {\n\t\tupdateFish: PropTypes.func,\n\t\tfish: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n\t\tindex:  PropTypes.string\n\t}\n\n\thandleChange = (event) => {\n\t\tconst updateFish = {\n\t\t\t...this.props.fish,\n\t\t\t[event.currentTarget.name]: event.currentTarget.value\n\t\t};\n\n\t\tthis.props.updateFish(this.props.index, updateFish);\n\n\t};\n\n    render() {\n        return (\n            <div className=\"fish-edit\">\n\t\t\t\t<input type=\"text\" name=\"name\" value={ this.props.fish.name } onChange={ this.handleChange }/>\n\t\t\t\t<input type=\"text\" name=\"price\" value={ this.props.fish.price } onChange={ this.handleChange }/>\n\t\t\t\t<select type=\"text\" name=\"status\" value={ this.props.fish.status }  onChange={ this.handleChange }>\n\t\t\t\t\t<option value=\"available\">Fresh!</option>\n\t\t\t\t\t<option value=\"unavailable\">Sold Out!</option>\n\t\t\t\t</select>\n\t\t\t\t<textarea type=\"text\" name=\"desc\" value={ this.props.fish.desc } onChange={ this.handleChange }></textarea>\n\t\t\t\t<input type=\"text\" name=\"image\" value={ this.props.fish.image } onChange={ this.handleChange } />\n\t\t\t\t<button onClick={ () => this.props.deleteFish(this.props.index) }>Remove fish</button>\n            </div>\n        )\n    }\n}\n\nexport default EditFishForm;","import React from 'react';\nimport PropTypes from 'prop-types';\n\nclass Login extends React.Component {\n    render() {\n        return (\n            <nav className=\"login\">\n            \t<h2>Inventory Login</h2>\n            \t<p>Sign in to manage your store's inventory.</p>\n            \t<button className=\"facebook\" onClick={ () => this.props.authenticate('Facebook')}>Log In with Facebook</button>\n            \t<button className=\"github\" onClick={ () => this.props.authenticate('Github')}>Log In with Github</button>\n\n            </nav>\n        )\n    }\n}\n\nLogin.propTypes = {\n\tauthenticate: PropTypes.func\n};\n\nexport default Login;","import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n    apiKey: \"AIzaSyBUzMRh_CCnVHEzcM9bX_l-2y0K-nJnddo\",\n    authDomain: \"react-for-beginners-testr.firebaseapp.com\",\n    databaseURL: \"https://react-for-beginners-testr.firebaseio.com\"\n });\n\nconst base = Rebase.createClass(firebaseApp.database());\n\nexport  { firebaseApp };\n\nexport default base;","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport firebase from 'firebase';\nimport AddFishForm from './AddFishForm';\nimport EditFishForm from './EditFishForm';\nimport Login from './Login';\nimport base, { firebaseApp } from '../base';\n\nclass Inventory extends React.Component {\n\tstatic propTypes = {\n\t\tfishes: PropTypes.object,\n\t\tupdateFish: PropTypes.func,\n\t\tdeleteFish: PropTypes.func,\n\t\tloadSampleFishes: PropTypes.func\n\t}\n\n\tstate = {\n\t\tuid: null,\n\t\towner: null\n\t}\n\n\tcomponentDidMount(){\n\t\tfirebase.auth().onAuthStateChanged(user => {\n\t\t\tif(user){\n\t\t\t\tthis.authHandler({ user });\n\t\t\t}\n\t\t});\n\t}\n\n\tauthHandler = async (authData) => {\n\t\tconst store = await base.fetch(this.props.storeId, { context: this});\n\n\t\tconsole.log(store);\n\n\t\tif(!store.owner){\n\t\t\tawait base.post(`${this.props.storeId}/owner`, {\n\t\t\t\tdata: authData.user.uid\n\t\t\t});\n\t\t}\n\n\t\tthis.setState({\n\t\t\tuid: authData.user.uid,\n\t\t\towner: store.owner || authData.user.uid\n\t\t});\n\n\t\tconsole.log(authData);\n\t}\n\n\tauthenticate = (provider) => {\n\t\tconst authProvider = new firebase.auth[`${provider}AuthProvider`]();\n\n\t\tfirebaseApp.auth().signInWithPopup(authProvider).then(this.authHandler);\n\t}\n\n\tlogout = async () => {\n\t\tawait firebase.auth().signOut();\n\t\tthis.setState({ uid: null });\n\t}\n\n  render() {\n  \tconst logout = <button onClick={ this.logout }>Log out</button>;\n  \tif(!this.state.uid){\n\t  \treturn <Login authenticate={this.authenticate} />;\n  \t}\n\n  \tif(this.state.uid !== this.state.owner){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<p>Sorry you are not the owner.</p>\n\t\t\t\t{ logout }\n\t\t\t</div>\n\t\t);\n  \t}\n\n    return (\n        <div className=\"inventory\">\n            <h2>Inventory</h2>\n\t\t\t{ logout }\n            { Object.keys(this.props.fishes).map(key => <EditFishForm key={ key } index={ key } fish={ this.props.fishes[key] } updateFish={ this.props.updateFish } deleteFish={ this.props.deleteFish } />)}\n            <AddFishForm addFish={this.props.addFish}/>\n            <button onClick={this.props.loadSampleFishes}>Load Sample Fishes</button>\n        </div>\n    );\n  }\n}\n\nexport default Inventory;\n","// This is just some sample data so you don't have to think of your own!\nconst fishes = {\n  fish1: {\n    name: \"Pacific Halibut\",\n    image: \"/images/hali.jpg\",\n    desc:\n      \"Everyone’s favorite white fish. We will cut it to the size you need and ship it.\",\n    price: 1724,\n    status: \"available\"\n  },\n\n  fish2: {\n    name: \"Lobster\",\n    image: \"/images/lobster.jpg\",\n    desc:\n      \"These tender, mouth-watering beauties are a fantastic hit at any dinner party.\",\n    price: 3200,\n    status: \"available\"\n  },\n\n  fish3: {\n    name: \"Sea Scallops\",\n    image: \"/images/scallops.jpg\",\n    desc:\n      \"Big, sweet and tender. True dry-pack scallops from the icey waters of Alaska. About 8-10 per pound\",\n    price: 1684,\n    status: \"unavailable\"\n  },\n\n  fish4: {\n    name: \"Mahi Mahi\",\n    image: \"/images/mahi.jpg\",\n    desc:\n      \"Lean flesh with a mild, sweet flavor profile, moderately firm texture and large, moist flakes. \",\n    price: 1129,\n    status: \"available\"\n  },\n\n  fish5: {\n    name: \"King Crab\",\n    image: \"/images/crab.jpg\",\n    desc:\n      \"Crack these open and enjoy them plain or with one of our cocktail sauces\",\n    price: 4234,\n    status: \"available\"\n  },\n\n  fish6: {\n    name: \"Atlantic Salmon\",\n    image: \"/images/salmon.jpg\",\n    desc:\n      \"This flaky, oily salmon is truly the king of the sea. Bake it, grill it, broil it...as good as it gets!\",\n    price: 1453,\n    status: \"available\"\n  },\n\n  fish7: {\n    name: \"Oysters\",\n    image: \"/images/oysters.jpg\",\n    desc: \"A soft plump oyster with a sweet salty flavor and a clean finish.\",\n    price: 2543,\n    status: \"available\"\n  },\n\n  fish8: {\n    name: \"Mussels\",\n    image: \"/images/mussels.jpg\",\n    desc:\n      \"The best mussels from the Pacific Northwest with a full-flavored and complex taste.\",\n    price: 425,\n    status: \"available\"\n  },\n\n  fish9: {\n    name: \"Jumbo Prawns\",\n    image: \"/images/prawns.jpg\",\n    desc:\n      \"With 21-25 two bite prawns in each pound, these sweet morsels are perfect for shish-kabobs.\",\n    price: 2250,\n    status: \"available\"\n  }\n};\n\nexport default fishes;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { formatPrice } from '../helpers';\n\nclass Fish extends React.Component {\n    static propTypes = {\n        details: PropTypes.shape({\n            image: PropTypes.string,\n            name: PropTypes.string,\n            desc: PropTypes.string,\n            status: PropTypes.string,\n            price: PropTypes.number\n        }),\n        addToOrder: PropTypes.func\n    }\n\n    handleClick = () => {\n        this.props.addToOrder(this.props.index);\n    };\n\n    render() {\n        const { image, name, price, desc, status } = this.props.details;\n        const isAvailable = status === 'available';\n\n\n        return (\n            <li className=\"menu-fish\">\n                <img src={image} alt={name} />\n                <h3 className=\"fish-name\">\n                    {name}\n                    <span className=\"price\">{formatPrice(price)}</span>\n                </h3>\n                <p>{desc}</p>\n                <button onClick={this.handleClick} disabled={!isAvailable}>{ isAvailable ? 'Add to Cart' : 'Sold out' }</button>\n            </li>\n        )\n    }\n}\n\nexport default Fish;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport StorePicker from './StorePicker';\nimport Header from './Header';\nimport Order from './Order';\nimport Inventory from './Inventory';\nimport sampleFishes from './../sample-fishes';\nimport Fish from './Fish';\nimport base from '../base';\n\nclass App extends React.Component {\n    state = {\n        fishes: {},\n        order: {}\n    };\n\n    static propTypes = {\n        math: PropTypes.object\n    }\n\n\n    componentDidMount() {\n        const { params } = this.props.match;\n\n        //fist take care of localStorage old data\n        const localStorageRef = localStorage.getItem(params.storeId);\n\n        if (localStorageRef) {\n            this.setState({ order: JSON.parse(localStorageRef) });\n        }\n\n        this.ref = base.syncState(`${params.storeId}/fishes`, {\n            context: this,\n            state: 'fishes'\n        });\n    }\n\n    componentWillUnmount() {\n        base.removeBinding(this.ref);\n    }\n\n    componentDidUpdate() {\n        localStorage.setItem(this.props.match.params.storeId, JSON.stringify(this.state.order));\n    }\n\n    addFish = (fish) => {\n        const fishes = { ...this.state.fishes };\n        fishes[`fish${Date.now()}`] = fish;\n\n        this.setState({ fishes });\n    };\n\n    updateFish = (key, updatedFish) => {\n        const fishes = { ...this.state.fishes };\n\n        fishes[key] = updatedFish;\n\n        this.setState({ fishes });\n    };\n\n    deleteFish = key => {\n        const fishes = this.state.fishes;\n\n        fishes[key] = null;\n\n        this.setState({ fishes });\n    };\n\n    loadSampleFishes = () => {\n        this.setState({ fishes: sampleFishes });\n    };\n\n    addToOrder = (key) => {\n        const order = { ...this.state.order };\n\n        order[key] = order[key] + 1 || 1;\n        this.setState({ order });\n    };\n\n    removeFromOrder = (key) => {\n        const order = this.state.order;\n\n        delete order[key];\n\n        this.setState({ order });\n    };\n\n    render() {\n        return (\n            <div className=\"catch-of-the-day\">\n                <div className=\"menu\">\n                    <Header tagline=\"Fresh daily\"/>\n                    <ul>\n                        {Object.keys(this.state.fishes).map(key => <Fish index={key} key={key} details={this.state.fishes[key]} addToOrder={this.addToOrder} />)}\n                    </ul>\n                </div>\n                <Order\n                    fishes={ this.state.fishes } \n                    order={ this.state.order }\n                    removeFromOrder={ this.removeFromOrder } />\n                <Inventory \n                    addFish={ this.addFish } \n                    loadSampleFishes={ this.loadSampleFishes } \n                    fishes={ this.state.fishes } \n                    updateFish={ this.updateFish }\n                    deleteFish={ this.deleteFish }\n                    storeId={ this.props.match.params.storeId } />\n            </div>\n        )\n    }\n}\n\nexport default App;","import React from 'react';\n\nconst NotFound = () => (\n    <div>\n        <h3>Page not found.</h3>\n    </div>\n)\n\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport StorePicker from './StorePicker';\nimport App from './App';\nimport NotFound from './NotFound';\n\nconst Router = () =>(\n        <BrowserRouter>\n            <Switch>\n                <Route exact path=\"/\" component={StorePicker} />\n                <Route path=\"/store/:storeId\" component={App} />\n                <Route component={NotFound} />\n            </Switch>\n        </BrowserRouter>\n    )    \n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router';\nimport './css/style.css';\n\nrender(<Router/>, document.querySelector('#main'));"],"sourceRoot":""}